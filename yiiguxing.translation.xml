<application>
  <component name="AppStorage">
    <histories>
      <item value="The identity of the principal being authenticated. In the case of an authentication" />
      <item value="The identity of the principal being authenticated. In the case of an authentication * request with username and password, this would be the username. Callers are * expected to populate the principal for an authentication request." />
      <item value="Principal" />
      <item value="Construct an OAuth 2 authentication. Since some grant types don't require user authentication, the user * authentication may be null." />
      <item value="credentials" />
      <item value="不足" />
      <item value="subtract" />
      <item value="remainder" />
      <item value="减" />
      <item value="Returns a {@code BigDecimal} whose value is {@code (this / * divisor)}, and whose preferred scale is {@code (this.scale() - * divisor.scale())}; if the exact quotient cannot be * represented (because it has a non-terminating decimal * expansion) an {@code ArithmeticException} is thrown." />
      <item value="divide" />
      <item value="multiply" />
      <item value="Reports conditions that become redundant as they are completely covered by a subsequent condition. For example, in the value != -1 &amp;&amp; value &gt; 0 condition, the first part is redundant: if it's false, then the second part is also false. Or in a condition like obj != null &amp;&amp; obj instanceof String, the null-check is redundant as instanceof operator implies non-nullity." />
      <item value="the raw password to encode and match" />
      <item value="the encoded password from storage to compare with" />
      <item value="Verify the encoded password obtained from storage matches the submitted raw * password after it too is encoded. Returns true if the passwords match, false if * they do not. The stored password itself is never decoded." />
      <item value="租户端" />
      <item value="generate Presigned Url" />
      <item value="Credentials Container" />
      <item value="erase Credentials After Authentication" />
      <item value="attempt" />
      <item value="The list of {@link AuthenticationProvider}s will be successively tried until an" />
      <item value="Attempts to authenticate the passed {@link Authentication} object." />
      <item value="Attempts to authenticate the passed {@link Authentication} object. * &lt;p&gt; * The list of {@link AuthenticationProvider}s will be successively tried until an * &lt;code&gt;AuthenticationProvider&lt;/code&gt; indicates it is capable of authenticating the * type of &lt;code&gt;Authentication&lt;/code&gt; object passed. Authentication will then be * attempted with that &lt;code&gt;AuthenticationProvider&lt;/code&gt;. * &lt;p&gt; * If more than one &lt;code&gt;AuthenticationProvider&lt;/code&gt; supports the passed * &lt;code&gt;Authentication&lt;/code&gt; object, the first one able to successfully * authenticate the &lt;code&gt;Authentication&lt;/code&gt; object determines the * &lt;code&gt;result&lt;/code&gt;, overriding any possible &lt;code&gt;AuthenticationException&lt;/code&gt; * thrown by earlier supporting &lt;code&gt;AuthenticationProvider&lt;/code&gt;s. * On successful authentication, no subsequent &lt;code&gt;AuthenticationProvider&lt;/code&gt;s * will be tried. * If authentication was not successful by any supporting" />
      <item value="链接" />
      <item value="文章" />
      <item value="classification" />
      <item value="分类" />
      <item value="常量" />
      <item value="determine" />
      <item value="he driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary" />
      <item value="deprecated" />
      <item value="Batch Review Paaed" />
      <item value="审核不通过" />
      <item value="审核通过" />
      <item value="未审核" />
      <item value="Recomment" />
      <item value="推荐" />
      <item value="选中" />
      <item value="批量" />
      <item value="纬度" />
      <item value="经度" />
      <item value="Invalid Grant Exception" />
      <item value="Expression" />
      <item value="authorize" />
      <item value="The bean 'myPasswordEncoder', defined in class path resource [com/jh/applets/config/oauth/config/MyWebSecurityConfig.class], could not be registered. A bean with that name has already been defined in file [F:\IdeaWorkspace\applets\target\classes\com\jh\applets\config\oauth\password\MyPasswordEncoder.class] and overriding is disabled. Action: Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true Disconnected from the target VM, address: '127.0.0.1:5350', transport: 'socket' Process finished with exit code 1" />
      <item value="Access Denied Handler" />
      <item value="Field configurers in org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerEndpointsConfiguration required a bean of type 'java.util.List' that could not be found." />
      <item value="onsider defining a bean of type 'java.util.List' in your configuration." />
      <item value="authenticated" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="385" />
        <entry key="ENGLISH" value="386" />
        <entry key="BASQUE" value="2" />
        <entry key="POLISH" value="2" />
        <entry key="DANISH" value="1" />
        <entry key="FRISIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>